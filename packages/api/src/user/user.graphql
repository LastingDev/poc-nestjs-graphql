"""
サービス利用者
TODO(enhancement): 作成日時・更新日時フィールドの追加
"""
type User {
  """ 外部ID """
  id: ID!

  """ ユーザー名 """
  name: String!

  """ ユーザーの年齢（非負整数） """
  age: Int!
}

""" ユーザー登録に必要なデータ """
input CreateUserInput {
  """ ユーザー名 """
  name: String!

  """ ユーザー名 """
  age: Int!
}

""" ユーザー情報更新に必要なデータ """
input UpdateUserInput {
  """ ユーザー名 """
  name: String!

  """ ユーザー名 """
  age: Int!
}

""" ユーザーの一覧取得の結果 """
type UsersResult {
  name: String!
  usersConnection: UsersConnection!
}

""" ユーザーのコネクション """
type UsersConnection {
  totalCount: Int!
  edges: [Edge!]!
  PageInfo: PageInfo!
}

""" ユーザーのコネクションのエッジ """
type Edge {
  node: User!
  cursor: String!
}

""" ページネーションの情報 """
type PageInfo {
  endCursor: String!
  hasNextPage: Boolean!
}

type Query {
  """
  ユーザーの一覧取得
  TODO(enhancement): GraphQL のプラクティスに沿った Pagination を実装する
  """
  users(first: Int!, after: String): UsersResult!

  """ 外部 ID を用いて一意のユーザー情報を取得する """
  user(id: ID!): User
}

type Mutation {
  """ ユーザー作成 """
  createUser(createUserInput: CreateUserInput!): User!

  """ ユーザー情報更新 """
  updateUser(id: ID!, updateUserInput: UpdateUserInput!): User!

  """ ユーザー論理削除 """
  removeUser(id: ID!): Boolean!
}
